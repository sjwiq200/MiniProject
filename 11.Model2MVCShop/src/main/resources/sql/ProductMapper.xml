<?xml version="1.0" encoding="UTF-8" ?>

<!DOCTYPE mapper
		PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
		"http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="ProductMapper">
 	
 	
	<resultMap id="productSelectMap" type="product">
		<result property="prodNo" column="prod_no" jdbcType="INTEGER"/>
		<result property="prodName" column="prod_name" jdbcType="VARCHAR"/>
		<result property="prodDetail" column="prod_detail" jdbcType="VARCHAR"/>
		<result property="manuDate" column="manufacture_day" jdbcType="VARCHAR"/>
		<result property="price" column="price" jdbcType="INTEGER"/>
		<result property="fileName" column="image_file" jdbcType="VARCHAR"/>
		<result property="regDate" column="reg_date" jdbcType="DATE"/>
		<result property="proTranCode" column="tsc" jdbcType="VARCHAR"/>
		<result property="prodCount" column="prod_count" jdbcType="INTEGER"/>
		
	</resultMap>
	
	<!-- SQL : INSERT -->
	<insert 	id="addProduct"		parameterType="product" >
	 	INSERT
		INTO product( prod_no, prod_name, prod_detail, manufacture_day, price, image_file, reg_date, prod_count) 
		VALUES	 (	#{prodNo} , #{prodName} , #{prodDetail} , #{manuDate} , #{price} ,
							#{fileName} , NOW(), #{prodCount} )
	 </insert>
	 
	 <!-- SQL : SELECT ONE -->
	 <select 	id="getProduct"	parameterType="int"	resultMap="productSelectMap">
		SELECT
		product.prod_no, product.prod_name, product.prod_detail, product.manufacture_day, product.price, product.image_file, product.reg_date, product.prod_count, transaction.tran_status_code AS tsc 		
		FROM product LEFT JOIN transaction
		ON product.prod_no = transaction.prod_no
		WHERE product.prod_no = #{value}
	 </select>
	 
	 <!-- SQL : UPDATE -->
	 <update	id="updateProduct"	parameterType="product" >
	   	UPDATE product
	   	<set>
	   		prod_name 	= #{prodName} ,
			prod_detail	= #{prodDetail},
			manufacture_day = #{manuDate} ,
			price =	#{price},
			image_file = #{fileName},
			reg_date = NOW(),
			prod_count = #{prodCount}
	   	</set>
	   	WHERE prod_no = #{prodNo}
	 </update>
		 
	<!-- SQL : SELECT LIST -->
	<select  id="getProductList"  parameterType="map"	resultMap="productSelectMap">
	  	SELECT *
	  	FROM (	SELECT inner_table.* , <!-- ROWNUM --> @RNUM := @RNUM+1 AS row_seq
	  					FROM		(	SELECT product.prod_no, product.prod_name, product.prod_detail, product.manufacture_day, product.price, product.image_file, product.reg_date,product.prod_count, transaction.tran_status_code AS tsc
											FROM product LEFT OUTER JOIN transaction
											ON product.prod_no = transaction.prod_no
											<if test="search.searchCondition != null">
													<if test="search.searchCondition == 0 and search.searchKeyword !='' ">
										 				<where>
										 				product.prod_no = #{search.searchKeyword}
										 				</where>
										 				ORDER BY prod_no
													</if>
													<if test="search.searchCondition == 1 and search.searchKeyword !='' ">
										 				<where>
										 				product.prod_name LIKE '%${search.searchKeyword}%'
										 				</where>
										 				ORDER BY prod_no
													</if>
													<if test="search.searchCondition == 2 and search.searchKeyword !='' and keywordArr == ''">
										 				<where>
										 				product.price LIKE #{search.searchKeyword}
										 				</where>
										 				ORDER BY price
													</if>
													<if test="search.searchCondition == 2 and search.searchKeyword != '' and keywordArr != ''">
														<where>
														product.price BETWEEN #{keywordArr[0]} AND #{keywordArr[1]}
														</where>
														ORDER BY price
													</if>
													
													<if test="search.searchCondition == 3">
														ORDER BY price ASC
													</if>
													<if test="search.searchCondition == 4">
														ORDER BY price DESC
													</if>
													
											</if>
											 ) inner_table, (SELECT @RNUM := 0) rownum
						WHERE <!-- ROWNUM --> @RNUM &lt;= #{search.endRowNum} ) test
		WHERE row_seq BETWEEN #{search.startRowNum} AND #{search.endRowNum} 
	 </select>
	 
	 	<!--  위 두번째 subQuery 의  
	 			WHERE ROWNUM &lt;= #{endRowNum} ) 는
	 			WHERE ROWNUM <= #{endRowNum} ) 의미이며..
	 			< 는 keyword 로 &lt; 를	사용.
	 			
	 			<![CDATA[  ~~~  ]]> 를 이용하여 아래와 같이 사용  할 수 있다.
	 			CDATA ==> Character Data 의 의미 Java 에서 \n 같은 특수문자 처리  

				WHERE ROWNUM <![CDATA[ <=]]> #{endRowNum} )
		-->
	
	<!-- SQL : SELECT ROW Count -->	 
	 <select  id="getTotalCount"  parameterType="search"	 resultType="int">
	  	SELECT COUNT(*)
	  	FROM(	SELECT product.prod_no, product.prod_name, product.prod_detail, product.manufacture_day, product.price, product.image_file, product.reg_date,product.prod_count, transaction.tran_status_code AS tsc
											FROM product LEFT JOIN transaction
											ON product.prod_no = transaction.prod_no
						<if test="searchCondition != null">
							<where>
								<if test="searchCondition == 0 and searchKeyword !='' ">
						 			product.prod_no = #{searchKeyword}
								</if>
								<if test="searchCondition == 1 and searchKeyword !='' ">
						 			product.prod_name LIKE '%${searchKeyword}%'
								</if>
								<if test="searchCondition == 2 and searchKeyword !='' ">
					 				product.price = #{searchKeyword}
								</if>
							</where>
						</if> ) countTable						
	 </select>
	 
</mapper>